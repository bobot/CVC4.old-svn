(benchmark mathsat
:source { MathSat group }
:logic QF_UFLRA
:status sat 
:category { random } 
:difficulty { 3 }
:extrafuns ((f0_1 Real Real))
:extrafuns ((f0_2 Real Real Real))
:extrafuns ((f0_3 Real Real Real Real))
:extrafuns ((f0_4 Real Real Real Real Real))
:extrafuns ((f1_1 Real Real))
:extrafuns ((f1_2 Real Real Real))
:extrafuns ((f1_3 Real Real Real Real))
:extrafuns ((f1_4 Real Real Real Real Real))
:extrafuns ((x0 Real))
:extrafuns ((x1 Real))
:extrafuns ((x2 Real))
:extrafuns ((x3 Real))
:extrafuns ((x4 Real))
:extrafuns ((x5 Real))
:extrafuns ((x6 Real))
:extrafuns ((x7 Real))
:extrafuns ((x8 Real))
:extrafuns ((x9 Real))
:extrapreds ((P0))
:extrapreds ((P1))
:extrapreds ((P2))
:extrapreds ((P3))
:extrapreds ((P4))
:extrapreds ((P5))
:extrapreds ((P6))
:extrapreds ((P7))
:extrapreds ((P8))
:extrapreds ((P9))
:formula
(let (?x10 (f1_1 x3))
(let (?x11 (f1_1 x5))
(let (?x12 (f1_1 x9))
(let (?x13 (- (- (* (- 0 13) x7) (* 1 x6)) (* 15 x8)))
(let (?x14 (f0_2 x7 x6))
(let (?x15 (- (+ (* 26 x9) (* 23 x7)) (* 22 x8)))
(let (?x16 (- (- (* 23 x4) (* 22 x3)) (* 15 x9)))
(let (?x17 (f0_1 x9))
(let (?x18 (+ (- (* (- 0 12) x3) (* 15 x6)) (* 17 x9)))
(let (?x19 (f1_1 x1))
(let (?x20 (f1_1 ?x13))
(let (?x21 (- (- (* 10 x9) (* 11 x5)) (* 3 x3)))
(let (?x22 (- (- (* (- 0 12) x1) (* 14 ?x17)) (* 24 x3)))
(let (?x23 (f0_2 ?x12 ?x13))
(let (?x24 (f0_2 x3 x1))
(let (?x25 (+ (+ (* 16 ?x17) (* 10 ?x16)) (* 26 ?x15)))
(let (?x26 (- (- (* (- 0 4) x6) (* 9 x7)) (* 23 x5)))
(let (?x27 (f1_1 x9))
(let (?x28 (f0_1 x8))
(let (?x29 (f1_2 x5 x5))
(let (?x30 (- (+ (* (- 0 9) x8) (* 19 x9)) (* 25 x2)))
(let (?x31 (f1_2 x8 ?x12))
(let (?x32 (+ (+ (* 10 x4) (* 18 x2)) (* 23 x5)))
(let (?x33 (+ (+ (* 4 ?x31) (* 26 x7)) (* 13 ?x32)))
(let (?x34 (f0_2 x7 x0))
(let (?x35 (- (+ (* (- 0 14) x6) (* 1 ?x11)) (* 15 ?x20)))
(let (?x36 (f0_1 x6))
(let (?x37 (+ (+ (* 3 x3) (* 4 x5)) (* 29 x0)))
(let (?x38 (f1_1 x5))
(let (?x39 (f1_1 x0))
(let (?x40 (f1_1 x2))
(let (?x41 (f0_1 x5))
(let (?x42 (- (- (* 29 ?x22) (* 2 ?x29)) (* 3 ?x10)))
(let (?x43 (+ (+ (* 2 x3) (* 25 x2)) (* 27 x0)))
(let (?x44 (- (+ (* (- 0 11) x8) (* 26 ?x36)) (* 1 ?x28)))
(let (?x45 (f0_2 x8 x5))
(let (?x46 (+ (- (* 29 x9) (* 26 x3)) (* 27 x7)))
(let (?x47 (f1_1 x2))
(let (?x48 (f1_2 ?x11 ?x13))
(let (?x49 (f0_1 x2))
(flet ($P10 (= x9 x5))
(flet ($P11 (< x4 24))
(flet ($P12 (< x5 (- 0 25)))
(flet ($P13 (< x1 (- 0 16)))
(flet ($P14 (< ?x13 (- 0 15)))
(flet ($P15 (< ?x13 3))
(flet ($P16 (< ?x41 21))
(flet ($P17 (= ?x28 ?x32))
(flet ($P18 (< x9 (- 0 1)))
(flet ($P19 (< ?x10 8))
(flet ($P20 (< x4 (- 0 22)))
(flet ($P21 (< ?x47 6))
(flet ($P22 (< x2 (- 0 26)))
(flet ($P23 (< ?x41 22))
(flet ($P24 (< ?x25 22))
(flet ($P25 (< x7 (- 0 3)))
(flet ($P26 (< ?x25 23))
(flet ($P27 (< x8 (- 0 1)))
(flet ($P28 (< x6 (- 0 13)))
(flet ($P29 (< x4 (- 0 24)))
(flet ($P30 (< x6 (- 0 15)))
(flet ($P31 (< ?x44 (- 0 14)))
(flet ($P32 (< ?x10 (- 0 16)))
(flet ($P33 (< ?x21 28))
(flet ($P34 (< ?x17 27))
(flet ($P35 (< ?x31 26))
(flet ($P36 (= ?x47 ?x24))
(flet ($P37 (< ?x49 27))
(flet ($P38 (< ?x36 (- 0 7)))
(flet ($P39 (= ?x32 ?x23))
(flet ($P40 (< ?x23 24))
(flet ($P41 (< ?x35 12))
(flet ($P42 (< ?x35 17))
(flet ($P43 (< ?x34 (- 0 2)))
(flet ($P44 (= x5 ?x37))
(flet ($P45 (< ?x14 22))
(flet ($P46 (< ?x24 6))
(flet ($P47 (< ?x14 (- 0 14)))
(flet ($P48 (< ?x22 (- 0 11)))
(flet ($P49 (< ?x32 7))
(flet ($P50 (< ?x38 (- 0 18)))
(flet ($P51 (< ?x20 (- 0 3)))
(flet ($P52 (< ?x46 (- 0 1)))
(flet ($P53 (< ?x35 11))
(flet ($P54 (= ?x37 ?x30))
(flet ($P55 (< ?x36 29))
(flet ($P56 (= ?x23 ?x21))
(flet ($P57 (< ?x16 (- 0 29)))
(flet ($P58 (< ?x39 (- 0 9)))
(flet ($P59 (< ?x43 29))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (or (or (not $P28) (not $P43)) $P54) (or (or $P33 (not $P28)) $P32)) (or (or (not $P41) (not $P41)) P9)) (or (or (not $P54) (not $P49)) (not $P21))) (or (or $P43 (not $P17)) $P16)) (or (or (not P7) (not $P46)) (not $P58))) (or (or (not $P25) $P56) P4)) (or (or $P54 (not $P20)) $P38)) (or (or $P42 (not P1)) (not $P53))) (or (or $P23 $P40) (not $P32))) (or (or P2 $P52) $P57)) (or (or (not P5) $P15) (not P7))) (or (or (not $P16) (not P5)) $P44)) (or (or $P35 $P34) (not P8))) (or (or $P37 $P23) P8)) (or (or $P42 (not $P18)) $P48)) (or (or (not $P54) (not $P59)) $P48)) (or (or (not $P10) (not $P12)) $P47)) (or (or (not $P16) (not $P53)) (not P7))) (or (or (not $P17) $P21) P2)) (or (or (not $P55) (not $P54)) $P29)) (or (or $P48 $P42) $P32)) (or (or $P29 $P29) (not $P58))) (or (or (not $P25) $P13) (not $P37))) (or (or (not $P58) (not $P46)) $P34)) (or (or $P42 $P53) $P44)) (or (or (not $P22) (not $P48)) $P52)) (or (or P7 $P50) $P14)) (or (or $P27 (not $P20)) (not $P24))) (or (or P0 $P57) (not $P18))) (or (or $P13 $P37) (not $P24))) (or (or $P51 (not P2)) $P41)) (or (or (not $P22) (not $P48)) $P34)) (or (or (not $P26) $P33) (not $P23))) (or (or (not $P33) (not $P51)) P4)) (or (or $P52 (not $P38)) (not $P31))) (or (or (not $P48) (not $P29)) (not $P56))) (or (or P7 (not $P58)) P2)) (or (or (not $P35) P1) P0)) (or (or $P35 $P14) $P33)) (or (or (not $P33) $P10) $P25)) (or (or (not $P39) (not $P57)) (not $P33))) (or (or $P17 (not $P17)) (not $P56))) (or (or (not $P17) (not $P17)) $P56)) (or (or $P52 (not $P55)) $P47)) (or (or $P47 $P57) (not $P32))) (or (or $P15 $P37) $P21)) (or (or (not $P39) (not $P43)) (not $P54))) (or (or $P40 P2) (not $P55))) (or (or $P11 $P52) (not $P31))) (or (or (not $P36) $P46) $P57)) (or (or P7 (not P2)) (not $P24))) (or (or (not $P41) $P28) P8)) (or (or (not $P36) (not P4)) P0)) (or (or (not $P18) $P28) $P39)) (or (or $P59 $P29) $P23)) (or (or (not P8) $P49) (not $P31))) (or (or (not $P49) $P20) (not P8))) (or (or $P39 (not $P54)) $P14)) (or (or (not $P31) $P48) (not $P25))) (or (or (not $P30) (not $P58)) $P56)) (or (or P8 (not $P50)) $P44)) (or (or (not $P25) (not $P31)) (not P6))) (or (or (not $P49) $P49) (not $P56))) (or (or (not $P20) (not $P48)) (not $P29))) (or (or $P29 (not $P16)) (not $P24))) (or (or $P28 $P10) $P27)) (or (or (not P6) $P40) $P10)) (or (or $P34 $P46) $P39)) (or (or (not $P41) $P30) $P15)) (or (or $P33 (not $P58)) (not $P12))) (or (or (not $P32) (not P1)) $P26)) (or (or (not $P30) $P38) $P20)) (or (or (not $P44) (not $P30)) (not $P39))) (or (or (not $P39) $P24) $P18)) (or (or $P43 (not P4)) $P46)) (or (or $P59 $P21) (not $P57))) (or (or P8 $P32) $P46)) (or (or (not $P33) (not $P20)) (not P7))) (or (or $P39 P8) $P42)) (or (or (not $P53) (not $P16)) (not P9))) (or (or (not $P12) $P54) (not $P10))) (or (or (not $P11) $P56) $P33)) (or (or (not $P53) $P17) (not P6))) (or (or $P48 (not $P11)) (not $P10))) (or (or $P37 $P57) (not $P53))) (or (or (not P8) (not $P36)) P6)) (or (or $P11 $P26) (not $P17))) (or (or $P23 $P52) (not $P42))) (or (or (not $P36) (not P1)) (not $P34))) (or (or (not $P46) (not $P18)) $P17)) (or (or P5 (not $P33)) (not $P27))) (or (or (not $P15) (not $P11)) $P58)) (or (or $P20 $P28) $P48)) (or (or $P53 $P46) $P15)) (or (or $P51 (not $P34)) P4)) (or (or (not $P24) $P46) (not $P23))) (or (or $P37 $P45) (not $P42))) (or (or P0 $P23) $P29)) (or (or (not P0) (not $P12)) $P41)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
