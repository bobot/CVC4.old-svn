# kinds                                                               -*- sh -*-
#
# For documentation on this file format, please refer to
# src/theory/builtin/kinds.
#

theory THEORY_ARITH ::CVC4::theory::arith::TheoryArith "theory/arith/theory_arith.h"
typechecker "theory/arith/theory_arith_type_rules.h"
instantiator ::CVC4::theory::arith::InstantiatorTheoryArith "theory/arith/theory_arith_instantiator.h"

properties stable-infinite
properties check propagate staticLearning presolve notifyRestart

rewriter ::CVC4::theory::arith::ArithRewriter "theory/arith/arith_rewriter.h"


operator PLUS 2: "arithmetic addition"
operator MULT 2: "arithmetic multiplication"
operator MINUS 2 "arithmetic binary subtraction operator"
operator UMINUS 1 "arithmetic unary negation"
operator DIVISION 2 "real division"
operator INTS_DIVISION 2 "ints division"
operator INTS_MODULUS 2 "ints modulus"
operator POW 2 "arithmetic power"

sort REAL_TYPE \
    Cardinality::REALS \
    well-founded \
        "NodeManager::currentNM()->mkConst(Rational(0))" \
        "expr/node_manager.h" \
    "Real type"
sort INTEGER_TYPE \
    Cardinality::INTEGERS \
    well-founded \
        "NodeManager::currentNM()->mkConst(Rational(0))" \
        "expr/node_manager.h" \
    "Integer type"

constant SUBRANGE_TYPE \
    ::CVC4::SubrangeBounds \
    ::CVC4::SubrangeBoundsHashStrategy \
    "util/subrange_bound.h" \
    "the type of an integer subrange"
cardinality SUBRANGE_TYPE \
    "::CVC4::theory::arith::SubrangeProperties::computeCardinality(%TYPE%)" \
    "theory/arith/theory_arith_type_rules.h"
well-founded SUBRANGE_TYPE \
    true \
    "::CVC4::theory::arith::SubrangeProperties::mkGroundTerm(%TYPE%)" \
    "theory/arith/theory_arith_type_rules.h"

constant CONST_RATIONAL \
    ::CVC4::Rational \
    ::CVC4::RationalHashStrategy \
    "util/rational.h" \
    "a multiple-precision rational constant"

enumerator REAL_TYPE \
    "::CVC4::theory::arith::RationalEnumerator" \
    "theory/arith/type_enumerator.h"
enumerator INTEGER_TYPE \
    "::CVC4::theory::arith::IntegerEnumerator" \
    "theory/arith/type_enumerator.h"

operator LT 2 "less than, x < y"
operator LEQ 2 "less than or equal, x <= y"
operator GT 2 "greater than, x > y"
operator GEQ 2 "greater than or equal, x >= y"

typerule PLUS ::CVC4::theory::arith::ArithOperatorTypeRule
typerule MULT ::CVC4::theory::arith::ArithOperatorTypeRule
typerule MINUS ::CVC4::theory::arith::ArithOperatorTypeRule
typerule UMINUS ::CVC4::theory::arith::ArithOperatorTypeRule
typerule DIVISION ::CVC4::theory::arith::ArithOperatorTypeRule
typerule POW ::CVC4::theory::arith::ArithOperatorTypeRule

typerule CONST_RATIONAL ::CVC4::theory::arith::ArithConstantTypeRule

typerule LT ::CVC4::theory::arith::ArithPredicateTypeRule
typerule LEQ ::CVC4::theory::arith::ArithPredicateTypeRule
typerule GT ::CVC4::theory::arith::ArithPredicateTypeRule
typerule GEQ ::CVC4::theory::arith::ArithPredicateTypeRule

typerule INTS_DIVISION ::CVC4::theory::arith::ArithOperatorTypeRule
typerule INTS_MODULUS ::CVC4::theory::arith::ArithOperatorTypeRule

endtheory
