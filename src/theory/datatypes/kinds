# kinds                                                               -*- sh -*-
#
# For documentation on this file format, please refer to
# src/theory/builtin/kinds.
#

theory THEORY_DATATYPES ::CVC4::theory::datatypes::TheoryDatatypes "theory/datatypes/theory_datatypes.h"

properties check presolve

rewriter ::CVC4::theory::datatypes::DatatypesRewriter "theory/datatypes/datatypes_rewriter.h"

# constructor type has a list of selector types followed by a return type
operator CONSTRUCTOR_TYPE 1: "constructor"
cardinality CONSTRUCTOR_TYPE \
    "::CVC4::theory::datatypes::ConstructorProperties::computeCardinality(%TYPE%)" \
    "theory/datatypes/theory_datatypes_type_rules.h"
well-founded CONSTRUCTOR_TYPE \
    "::CVC4::theory::datatypes::ConstructorProperties::isWellFounded(%TYPE%)" \
    "::CVC4::theory::datatypes::ConstructorProperties::mkGroundTerm(%TYPE%)" \
    "theory/datatypes/theory_datatypes_type_rules.h"

# selector type has domain type and a range type
operator SELECTOR_TYPE 2 "selector"
# can re-use function cardinality
cardinality SELECTOR_TYPE \
    "::CVC4::theory::builtin::FunctionProperties::computeCardinality(%TYPE%)" \
    "theory/builtin/theory_builtin_type_rules.h"

# tester type has a constructor type
operator TESTER_TYPE 1 "tester"
# can re-use function cardinality
cardinality TESTER_TYPE \
    "::CVC4::theory::builtin::FunctionProperties::computeCardinality(%TYPE%)" \
    "theory/builtin/theory_builtin_type_rules.h"

parameterized APPLY_CONSTRUCTOR CONSTRUCTOR_TYPE 0: "constructor application"

parameterized APPLY_SELECTOR SELECTOR_TYPE 1: "selector application"

parameterized APPLY_TESTER TESTER_TYPE 1: "tester application"

constant DATATYPE_TYPE \
    ::CVC4::Datatype \
    "::CVC4::DatatypeHashStrategy" \
    "util/datatype.h" \
    "datatype type"
cardinality DATATYPE_TYPE \
    "%TYPE%.getConst<Datatype>().getCardinality()" \
    "util/datatype.h"
well-founded DATATYPE_TYPE \
    "%TYPE%.getConst<Datatype>().isWellFounded()" \
    "%TYPE%.getConst<Datatype>().mkGroundTerm(%TYPE%.toType())" \
    "util/datatype.h"

operator PARAMETRIC_DATATYPE 1: "parametric datatype"
cardinality PARAMETRIC_DATATYPE \
    "DatatypeType(%TYPE%.toType()).getDatatype().getCardinality()" \
    "util/datatype.h"
well-founded PARAMETRIC_DATATYPE\
    "DatatypeType(%TYPE%.toType()).getDatatype().isWellFounded()" \
    "DatatypeType(%TYPE%.toType()).getDatatype().mkGroundTerm(%TYPE%.toType())" \
    "util/datatype.h"

parameterized APPLY_TYPE_ASCRIPTION ASCRIPTION_TYPE 1 \
    "type ascription, for nullary, parameteric datatype constructors"
constant ASCRIPTION_TYPE \
    ::CVC4::AscriptionType \
    ::CVC4::AscriptionTypeHashStrategy \
    "util/ascription_type.h" \
    "a type parameter for type ascription"

endtheory
