(benchmark mathsat
:source { MathSat group }
:logic QF_UFLRA
:status sat 
:category { random } 
:difficulty { 3 }
:extrafuns ((f0_1 Real Real))
:extrafuns ((f0_2 Real Real Real))
:extrafuns ((f0_3 Real Real Real Real))
:extrafuns ((f0_4 Real Real Real Real Real))
:extrafuns ((f1_1 Real Real))
:extrafuns ((f1_2 Real Real Real))
:extrafuns ((f1_3 Real Real Real Real))
:extrafuns ((f1_4 Real Real Real Real Real))
:extrafuns ((x0 Real))
:extrafuns ((x1 Real))
:extrafuns ((x2 Real))
:extrafuns ((x3 Real))
:extrafuns ((x4 Real))
:extrafuns ((x5 Real))
:extrafuns ((x6 Real))
:extrafuns ((x7 Real))
:extrafuns ((x8 Real))
:extrafuns ((x9 Real))
:extrapreds ((P0))
:extrapreds ((P1))
:extrapreds ((P2))
:extrapreds ((P3))
:extrapreds ((P4))
:extrapreds ((P5))
:extrapreds ((P6))
:extrapreds ((P7))
:extrapreds ((P8))
:extrapreds ((P9))
:formula
(let (?x10 (f1_1 x4))
(let (?x11 (f1_1 x6))
(let (?x12 (- (+ (* 4 x1) (* 29 x9)) (* 21 x7)))
(let (?x13 (- (+ (* (- 0 17) x5) (* 27 x1)) (* 12 x3)))
(let (?x14 (- (+ (* (- 0 10) x3) (* 13 x7)) (* 5 x1)))
(let (?x15 (f0_1 x9))
(let (?x16 (f0_1 x1))
(let (?x17 (+ (+ (* 17 ?x15) (* 24 x5)) (* 23 ?x16)))
(let (?x18 (f0_2 x6 x5))
(let (?x19 (f1_2 x0 x0))
(let (?x20 (- (+ (* (- 0 19) x5) (* 26 x2)) (* 21 ?x12)))
(let (?x21 (f1_2 x7 x8))
(let (?x22 (- (+ (* 10 ?x18) (* 23 x2)) (* 11 x8)))
(let (?x23 (f0_2 x9 x3))
(let (?x24 (f1_2 x1 x9))
(let (?x25 (f0_2 x5 x8))
(let (?x26 (f1_1 x1))
(let (?x27 (f0_2 x4 x7))
(let (?x28 (f1_1 x7))
(let (?x29 (f1_2 x6 ?x18))
(let (?x30 (- (- (* (- 0 12) x8) (* 1 x5)) (* 16 x7)))
(let (?x31 (+ (- (* (- 0 29) ?x28) (* 7 ?x19)) (* 7 ?x11)))
(let (?x32 (f1_1 x3))
(let (?x33 (+ (+ (* (- 0 23) x0) (* 17 x2)) (* 7 x4)))
(let (?x34 (- (+ (* (- 0 21) ?x27) (* 17 x8)) (* 6 ?x23)))
(let (?x35 (+ (+ (* (- 0 14) ?x20) (* 16 ?x30)) (* 8 ?x18)))
(let (?x36 (f0_2 x5 x7))
(let (?x37 (f1_2 x9 x8))
(let (?x38 (f1_2 x1 ?x12))
(let (?x39 (f0_1 x3))
(let (?x40 (- (- (* (- 0 24) x4) (* 21 x2)) (* 9 x5)))
(let (?x41 (+ (- (* 1 ?x35) (* 3 ?x14)) (* 12 ?x18)))
(let (?x42 (- (+ (* (- 0 11) x9) (* 16 x7)) (* 4 x1)))
(let (?x43 (f1_2 ?x15 ?x14))
(let (?x44 (f1_2 ?x43 ?x18))
(let (?x45 (f0_1 x5))
(let (?x46 (f0_1 x2))
(let (?x47 (f0_1 x5))
(let (?x48 (+ (- (* (- 0 8) x2) (* 19 x6)) (* 8 x1)))
(let (?x49 (f1_2 x9 x0))
(flet ($P10 (= ?x38 ?x18))
(flet ($P11 (< ?x12 (- 0 20)))
(flet ($P12 (< ?x11 8))
(flet ($P13 (< ?x39 (- 0 24)))
(flet ($P14 (< x2 (- 0 18)))
(flet ($P15 (= ?x18 x8))
(flet ($P16 (= ?x37 ?x34))
(flet ($P17 (< ?x14 (- 0 24)))
(flet ($P18 (= ?x26 ?x33))
(flet ($P19 (= ?x18 ?x15))
(flet ($P20 (< ?x35 (- 0 22)))
(flet ($P21 (= ?x41 ?x13))
(flet ($P22 (< x1 (- 0 27)))
(flet ($P23 (< ?x47 (- 0 27)))
(flet ($P24 (< ?x45 (- 0 10)))
(flet ($P25 (= ?x13 ?x35))
(flet ($P26 (< ?x17 (- 0 1)))
(flet ($P27 (< x8 3))
(flet ($P28 (< x7 23))
(flet ($P29 (< ?x27 (- 0 28)))
(flet ($P30 (< ?x35 (- 0 1)))
(flet ($P31 (< ?x11 15))
(flet ($P32 (< ?x39 (- 0 17)))
(flet ($P33 (< ?x40 (- 0 28)))
(flet ($P34 (< ?x15 (- 0 8)))
(flet ($P35 (< ?x33 19))
(flet ($P36 (= ?x41 x6))
(flet ($P37 (< ?x48 26))
(flet ($P38 (< ?x46 0))
(flet ($P39 (< ?x42 9))
(flet ($P40 (= ?x43 x6))
(flet ($P41 (< x8 (- 0 13)))
(flet ($P42 (< ?x17 (- 0 26)))
(flet ($P43 (= x4 x5))
(flet ($P44 (< ?x11 17))
(flet ($P45 (< ?x12 15))
(flet ($P46 (< ?x19 1))
(flet ($P47 (< ?x49 9))
(flet ($P48 (< x0 (- 0 14)))
(flet ($P49 (< ?x27 22))
(flet ($P50 (< x6 18))
(flet ($P51 (< x0 (- 0 15)))
(flet ($P52 (< ?x13 17))
(flet ($P53 (< ?x19 (- 0 15)))
(flet ($P54 (< x9 6))
(flet ($P55 (< ?x35 22))
(flet ($P56 (< x5 (- 0 26)))
(flet ($P57 (< ?x34 5))
(flet ($P58 (= ?x37 x1))
(flet ($P59 (< ?x47 (- 0 28)))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (or (or P6 (not $P15)) $P33) (or (or $P42 P6) (not $P12))) (or (or $P19 (not $P50)) P3)) (or (or (not $P11) $P44) $P39)) (or (or P5 $P17) (not $P18))) (or (or P5 (not P2)) P4)) (or (or $P30 $P53) $P33)) (or (or $P27 (not $P22)) $P42)) (or (or (not $P16) $P24) (not $P29))) (or (or (not $P56) $P48) (not $P13))) (or (or $P54 $P53) (not $P41))) (or (or (not $P26) $P40) (not $P36))) (or (or (not $P33) $P21) $P54)) (or (or $P22 P8) (not P7))) (or (or (not $P56) (not $P51)) $P43)) (or (or P6 $P19) (not $P22))) (or (or (not $P31) P4) (not P1))) (or (or (not $P17) (not $P10)) $P48)) (or (or $P40 $P22) (not $P29))) (or (or (not $P21) $P49) $P55)) (or (or $P14 (not $P20)) P5)) (or (or $P41 (not $P44)) (not $P33))) (or (or $P26 $P42) $P46)) (or (or $P53 (not $P23)) (not $P57))) (or (or (not P3) $P35) $P17)) (or (or (not $P13) (not P9)) $P37)) (or (or (not $P14) (not $P14)) $P54)) (or (or $P32 $P29) (not $P28))) (or (or (not $P18) (not $P38)) $P21)) (or (or (not $P59) (not P8)) $P48)) (or (or P5 $P37) (not P3))) (or (or $P10 $P13) (not P4))) (or (or P4 (not $P43)) $P36)) (or (or P5 (not P1)) $P20)) (or (or P6 $P21) (not $P30))) (or (or (not $P24) $P45) (not P5))) (or (or $P38 $P50) (not P1))) (or (or (not P0) $P13) $P19)) (or (or (not $P10) $P22) $P32)) (or (or (not $P25) $P35) (not $P46))) (or (or (not P2) $P21) $P51)) (or (or $P40 (not $P39)) $P10)) (or (or $P13 (not $P20)) $P59)) (or (or $P19 (not $P14)) (not $P46))) (or (or (not $P38) (not $P51)) $P52)) (or (or (not $P48) $P25) P7)) (or (or (not $P36) (not $P59)) $P40)) (or (or (not $P46) $P27) $P10)) (or (or $P10 (not P1)) (not $P17))) (or (or $P54 $P18) (not $P23))) (or (or (not $P28) P3) (not $P42))) (or (or (not $P53) $P47) (not $P56))) (or (or $P23 (not P5)) (not $P31))) (or (or $P47 (not $P49)) $P36)) (or (or $P30 (not $P59)) $P20)) (or (or (not $P33) P1) (not P0))) (or (or (not $P49) $P34) (not $P11))) (or (or (not P3) $P30) (not $P25))) (or (or (not $P59) (not $P47)) (not $P12))) (or (or (not $P39) $P37) (not $P56))) (or (or (not $P58) (not $P48)) (not $P41))) (or (or $P32 $P30) (not $P11))) (or (or $P34 $P12) (not $P41))) (or (or P1 (not $P17)) (not $P59))) (or (or (not $P40) $P15) $P27)) (or (or (not P0) $P58) $P18)) (or (or $P58 $P41) $P30)) (or (or (not $P27) P2) P0)) (or (or (not $P19) $P22) (not $P58))) (or (or $P18 (not $P38)) (not $P31))) (or (or (not $P32) (not $P11)) $P39)) (or (or (not P6) P1) $P15)) (or (or (not $P32) P9) (not $P28))) (or (or (not $P22) $P39) $P30)) (or (or $P54 $P35) $P11)) (or (or $P47 P9) $P54)) (or (or (not $P39) (not $P30)) (not $P58))) (or (or (not $P23) (not $P39)) $P37)) (or (or (not P2) (not $P48)) $P49)) (or (or (not $P19) (not $P45)) (not P5))) (or (or $P20 $P34) (not $P37))) (or (or $P16 $P11) (not $P43))) (or (or $P44 (not $P21)) $P24)) (or (or $P57 P7) $P49)) (or (or $P54 $P11) (not P2))) (or (or (not $P29) $P23) P3)) (or (or (not $P50) $P56) $P33)) (or (or (not $P10) $P56) (not $P19))) (or (or $P21 (not $P39)) (not $P33))) (or (or (not $P33) $P23) P8)) (or (or (not $P58) (not $P29)) $P54)) (or (or (not $P42) (not $P20)) P1)) (or (or P3 $P44) (not P2))) (or (or (not P1) $P19) (not $P18))) (or (or $P53 (not $P23)) (not $P40))) (or (or (not $P55) (not P8)) (not $P38))) (or (or (not P2) $P49) $P58)) (or (or P2 $P20) (not $P27))) (or (or $P51 (not P5)) $P24)) (or (or P2 (not $P59)) (not $P26))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
