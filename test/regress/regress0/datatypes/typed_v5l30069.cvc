% EXPECT: valid
% EXIT: 20
DATATYPE
  nat = succ(pred : nat) | zero,
  list = cons(car : tree, cdr : list) | null,
  tree = node(children : list) | leaf(data : nat)
END;

x1 : nat ;
x2 : nat ;
x3 : nat ;
x4 : nat ;
x5 : nat ;
x6 : list ;
x7 : list ;
x8 : list ;
x9 : list ;
x10 : list ;
x11 : tree ;
x12 : tree ;
x13 : tree ;
x14 : tree ;
x15 : tree ;

QUERY 

(NOT ((is_cons((LET x121 = leaf((LET x122 = x13 IN (IF is_leaf(x122) THEN data(x122) ELSE zero ENDIF))) IN (IF is_node(x121) THEN children(x121) ELSE null ENDIF)))
 AND (x15 = node(x6)))
 AND (NOT is_cons(x10))));
