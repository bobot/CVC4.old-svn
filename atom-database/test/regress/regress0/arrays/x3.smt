(benchmark fuzzsmt
:logic QF_AX
:status sat
:extrafuns ((v4 Index))
:extrafuns ((v2 Index))
:extrafuns ((v3 Index))
:extrafuns ((v1 Array))
:extrafuns ((v6 Element))
:extrafuns ((v0 Array))
:extrafuns ((v5 Element))
:status unknown
:formula
(let (?n1 (store v1 v3 v6))
(flet ($n2 (distinct ?n1 v0))
(flet ($n3 (= v4 v2))
(flet ($n4 true)
(let (?n5 (store v1 v4 v6))
(let (?n6 (select ?n5 v2))
(let (?n7 (ite $n4 ?n6 v6))
(let (?n8 (select v1 v3))
(let (?n9 (ite $n3 ?n7 ?n8))
(flet ($n10 (distinct ?n8 ?n8))
(let (?n11 (ite $n10 v6 ?n6))
(let (?n12 (ite $n2 ?n9 ?n11))
(flet ($n13 (= v6 ?n12))
(flet ($n14 (distinct ?n8 v5))
(let (?n15 (ite $n2 v1 v0))
(let (?n16 (ite $n14 v1 ?n15))
(flet ($n17 (distinct ?n5 ?n16))
(flet ($n18 (and $n13 $n17))
(flet ($n19 (distinct v0 ?n5))
(let (?n20 (ite $n19 v2 v4))
(flet ($n21 (= v3 v2))
(flet ($n22 (= v0 v0))
(flet ($n23 (= v6 ?n8))
(flet ($n24 false)
(flet ($n25 (= ?n6 ?n8))
(let (?n26 (ite $n25 v3 v2))
(let (?n27 (ite $n24 v4 ?n26))
(let (?n28 (ite $n23 v3 ?n27))
(let (?n29 (ite $n22 ?n28 v4))
(let (?n30 (ite $n21 v3 ?n29))
(flet ($n31 (distinct ?n20 ?n30))
(flet ($n32 (or $n18 $n31))
$n32
)))))))))))))))))))))))))))))))))
