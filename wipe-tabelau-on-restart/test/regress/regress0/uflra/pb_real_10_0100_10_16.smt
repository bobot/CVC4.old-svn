(benchmark mathsat
:source { MathSat group }
:logic QF_UFLRA
:status sat 
:category { random } 
:difficulty { 3 }
:extrafuns ((f0_1 Real Real))
:extrafuns ((f0_2 Real Real Real))
:extrafuns ((f0_3 Real Real Real Real))
:extrafuns ((f0_4 Real Real Real Real Real))
:extrafuns ((f1_1 Real Real))
:extrafuns ((f1_2 Real Real Real))
:extrafuns ((f1_3 Real Real Real Real))
:extrafuns ((f1_4 Real Real Real Real Real))
:extrafuns ((x0 Real))
:extrafuns ((x1 Real))
:extrafuns ((x2 Real))
:extrafuns ((x3 Real))
:extrafuns ((x4 Real))
:extrafuns ((x5 Real))
:extrafuns ((x6 Real))
:extrafuns ((x7 Real))
:extrafuns ((x8 Real))
:extrafuns ((x9 Real))
:extrapreds ((P0))
:extrapreds ((P1))
:extrapreds ((P2))
:extrapreds ((P3))
:extrapreds ((P4))
:extrapreds ((P5))
:extrapreds ((P6))
:extrapreds ((P7))
:extrapreds ((P8))
:extrapreds ((P9))
:formula
(let (?x10 (f0_2 x3 x2))
(let (?x11 (f1_2 x9 x8))
(let (?x12 (f1_1 x8))
(let (?x13 (f0_1 x7))
(let (?x14 (f0_1 x2))
(let (?x15 (f0_1 x1))
(let (?x16 (f0_2 x4 x7))
(let (?x17 (f1_2 x9 x0))
(let (?x18 (+ (- (* 13 x7) (* 13 x4)) (* 6 x2)))
(let (?x19 (f0_1 x6))
(let (?x20 (- (+ (* (- 0 22) x0) (* 19 x7)) (* 20 x1)))
(let (?x21 (f0_2 ?x15 x7))
(let (?x22 (- (- (* (- 0 18) x4) (* 27 x1)) (* 24 x7)))
(let (?x23 (f0_2 x8 x3))
(let (?x24 (f1_2 x5 x8))
(let (?x25 (f0_2 x6 x0))
(let (?x26 (- (+ (* (- 0 1) x1) (* 9 ?x11)) (* 2 ?x21)))
(let (?x27 (f1_2 x7 x7))
(let (?x28 (+ (+ (* (- 0 10) x2) (* 5 ?x15)) (* 2 ?x11)))
(let (?x29 (- (- (* (- 0 24) x3) (* 24 x8)) (* 4 x1)))
(let (?x30 (f1_2 ?x22 x4))
(let (?x31 (f1_1 x2))
(let (?x32 (- (+ (* 19 ?x10) (* 5 ?x24)) (* 17 x1)))
(let (?x33 (- (- (* 22 x3) (* 6 x9)) (* 13 x2)))
(let (?x34 (f1_2 x8 x5))
(let (?x35 (- (+ (* (- 0 23) ?x18) (* 17 x8)) (* 19 ?x20)))
(let (?x36 (f0_2 x7 x0))
(let (?x37 (f1_1 x2))
(let (?x38 (+ (+ (* (- 0 9) x5) (* 8 x6)) (* 14 x1)))
(let (?x39 (f1_2 ?x35 ?x12))
(let (?x40 (- (- (* 10 x3) (* 22 x1)) (* 29 x8)))
(let (?x41 (f1_2 ?x30 ?x28))
(let (?x42 (f0_1 x4))
(let (?x43 (+ (+ (* 29 x2) (* 1 x3)) (* 3 ?x37)))
(let (?x44 (f1_2 x2 x3))
(let (?x45 (+ (- (* 10 x4) (* 6 x3)) (* 24 x1)))
(let (?x46 (+ (+ (* (- 0 12) x8) (* 22 x3)) (* 7 x4)))
(let (?x47 (- (+ (* (- 0 28) ?x44) (* 29 ?x16)) (* 5 x7)))
(let (?x48 (f1_1 x6))
(let (?x49 (f1_1 x8))
(flet ($P10 (< ?x41 24))
(flet ($P11 (< ?x22 (- 0 20)))
(flet ($P12 (< ?x10 (- 0 8)))
(flet ($P13 (< ?x46 2))
(flet ($P14 (< ?x30 9))
(flet ($P15 (< x9 11))
(flet ($P16 (< ?x33 1))
(flet ($P17 (< ?x47 (- 0 19)))
(flet ($P18 (< ?x36 22))
(flet ($P19 (< ?x20 4))
(flet ($P20 (< ?x29 29))
(flet ($P21 (< ?x47 15))
(flet ($P22 (< ?x11 8))
(flet ($P23 (< ?x28 24))
(flet ($P24 (< ?x31 0))
(flet ($P25 (< ?x11 11))
(flet ($P26 (< x7 0))
(flet ($P27 (< ?x30 (- 0 8)))
(flet ($P28 (< ?x36 (- 0 22)))
(flet ($P29 (= ?x33 ?x45))
(flet ($P30 (= x3 ?x46))
(flet ($P31 (= ?x29 ?x18))
(flet ($P32 (= ?x22 ?x17))
(flet ($P33 (< ?x46 9))
(flet ($P34 (< ?x32 4))
(flet ($P35 (= ?x11 ?x41))
(flet ($P36 (< ?x27 (- 0 15)))
(flet ($P37 (< ?x48 (- 0 11)))
(flet ($P38 (< ?x37 (- 0 29)))
(flet ($P39 (< ?x11 (- 0 9)))
(flet ($P40 (< ?x43 20))
(flet ($P41 (< ?x30 7))
(flet ($P42 (< ?x31 (- 0 22)))
(flet ($P43 (< ?x36 (- 0 4)))
(flet ($P44 (< ?x43 13))
(flet ($P45 (< ?x11 (- 0 16)))
(flet ($P46 (< ?x40 22))
(flet ($P47 (< x9 (- 0 19)))
(flet ($P48 (< ?x25 12))
(flet ($P49 (< ?x23 19))
(flet ($P50 (< x1 (- 0 16)))
(flet ($P51 (= ?x19 x6))
(flet ($P52 (= x8 ?x43))
(flet ($P53 (< x4 (- 0 2)))
(flet ($P54 (= ?x14 ?x48))
(flet ($P55 (< ?x42 (- 0 23)))
(flet ($P56 (< ?x19 3))
(flet ($P57 (< ?x36 1))
(flet ($P58 (< ?x26 0))
(flet ($P59 (< ?x18 (- 0 21)))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (or (or (not $P53) (not $P57)) (not $P45)) (or (or (not $P48) $P21) (not P2))) (or (or (not $P54) (not $P48)) (not $P37))) (or (or P6 P9) (not $P24))) (or (or $P14 (not $P25)) $P19)) (or (or (not $P52) (not $P25)) (not $P20))) (or (or (not P8) (not $P43)) $P10)) (or (or (not $P37) $P26) (not $P18))) (or (or $P22 (not $P51)) P3)) (or (or (not P0) (not $P58)) $P49)) (or (or $P21 (not $P26)) (not $P20))) (or (or (not $P48) (not $P56)) (not P0))) (or (or (not $P40) $P11) (not $P17))) (or (or (not P5) (not P7)) $P36)) (or (or (not P0) (not $P28)) $P47)) (or (or (not $P13) $P21) (not $P58))) (or (or $P28 (not $P33)) $P47)) (or (or $P48 P4) (not $P44))) (or (or $P11 $P14) $P55)) (or (or $P58 (not $P50)) (not $P41))) (or (or (not $P36) $P46) P1)) (or (or $P29 $P28) $P41)) (or (or (not $P43) P8) (not P3))) (or (or (not $P41) (not P6)) $P49)) (or (or $P13 (not $P14)) (not $P46))) (or (or $P28 $P47) $P35)) (or (or (not $P19) (not $P37)) (not $P28))) (or (or (not $P17) (not $P28)) (not $P55))) (or (or P8 (not $P30)) $P38)) (or (or (not $P51) $P34) $P53)) (or (or P5 $P34) (not $P54))) (or (or (not $P38) $P45) (not $P23))) (or (or (not $P51) $P28) (not $P44))) (or (or $P28 $P31) (not $P41))) (or (or $P25 $P20) $P47)) (or (or $P51 $P37) P5)) (or (or (not $P28) $P22) (not $P26))) (or (or (not $P32) (not $P20)) $P35)) (or (or P7 $P49) (not $P13))) (or (or (not $P32) $P30) (not P8))) (or (or P8 (not $P30)) P9)) (or (or (not $P22) (not $P20)) $P48)) (or (or $P31 $P53) (not P6))) (or (or $P57 $P18) P4)) (or (or $P50 P2) (not $P13))) (or (or P0 $P16) (not $P23))) (or (or $P43 (not $P21)) $P31)) (or (or $P20 $P18) $P30)) (or (or (not $P52) (not P3)) $P48)) (or (or (not $P29) $P36) P8)) (or (or (not P8) (not $P24)) (not $P56))) (or (or $P40 (not $P29)) (not $P27))) (or (or (not $P35) $P56) (not $P11))) (or (or (not $P11) (not $P59)) (not $P28))) (or (or (not P7) $P28) $P11)) (or (or (not $P16) $P29) (not P0))) (or (or $P58 (not $P32)) $P18)) (or (or (not $P23) (not $P10)) (not P9))) (or (or $P38 (not $P15)) $P29)) (or (or (not P8) (not $P13)) (not P1))) (or (or (not $P39) (not $P38)) (not $P17))) (or (or $P53 $P46) (not P9))) (or (or $P40 (not $P49)) (not P8))) (or (or $P32 (not $P22)) $P44)) (or (or (not P7) (not $P47)) (not $P24))) (or (or $P10 $P20) (not $P26))) (or (or (not $P38) (not $P39)) (not $P58))) (or (or (not $P33) $P15) $P47)) (or (or (not $P48) $P38) P9)) (or (or $P39 (not $P15)) (not $P21))) (or (or (not $P56) $P11) (not $P37))) (or (or (not $P18) $P23) $P26)) (or (or $P59 P2) P6)) (or (or $P27 $P26) (not $P18))) (or (or (not $P45) (not P7)) (not $P16))) (or (or $P31 $P26) (not $P41))) (or (or $P29 $P55) (not $P32))) (or (or $P42 $P12) (not $P15))) (or (or (not $P55) $P57) (not $P25))) (or (or $P18 (not $P19)) P0)) (or (or $P55 (not $P44)) $P37)) (or (or $P38 (not $P37)) $P25)) (or (or P9 $P22) $P15)) (or (or (not $P14) (not $P52)) (not P1))) (or (or $P39 $P41) (not $P52))) (or (or $P39 $P48) (not P1))) (or (or (not $P55) (not $P11)) $P42)) (or (or (not $P57) (not $P15)) (not P6))) (or (or $P24 $P15) $P16)) (or (or $P45 $P41) (not $P14))) (or (or (not $P52) $P45) P2)) (or (or (not P9) $P36) (not $P34))) (or (or (not $P46) (not $P29)) P4)) (or (or $P10 (not $P15)) $P32)) (or (or (not $P30) P1) $P47)) (or (or (not $P14) (not P3)) $P28)) (or (or $P22 (not $P48)) P3)) (or (or (not $P16) $P37) (not $P35))) (or (or $P20 (not $P46)) (not $P38))) (or (or $P38 (not $P53)) $P25)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
